name: Vagrant Development Build (Arch Linux)
on:
  repository_dispatch:
    types:
      - build-arch
  push:
    branches:
      - 'build-arch-*'
  workflow_dispatch:

jobs:
  vagrant-artifacts:
    if: github.repository == 'hashicorp/vagrant-builders'
    name: Build Core Vagrant Artifacts
    permissions:
      contents: write
    uses: ./.github/workflows/vagrant-artifacts.yml
    with:
      vagrant-commit-id: ${{ github.event.client_payload.commit_id }}
  build-archlinux-package:
    if: github.repository == 'hashicorp/vagrant-builders'
    name: Build Arch Linux Package
    needs: [vagrant-artifacts]
    permissions:
      contents: write
      id-token: write
    uses: ./.github/workflows/build-arch.yml
    with:
      vagrant-artifacts-name: ${{ needs.vagrant-artifacts.outputs.artifacts-name }}
      vagrant-artifacts-path: ${{ needs.vagrant-artifacts.outputs.artifacts-path }}
      vagrant-gem-name: ${{ needs.vagrant-artifacts.outputs.gem-name }}
      vagrant-gem-path: ${{ needs.vagrant-artifacts.outputs.gem-path }}
      vagrant-version: ${{ needs.vagrant-artifacts.outputs.vagrant-version }}
      vagrant-shasum: ${{ needs.vagrant-artifacts.outputs.vagrant-shasum }}
    secrets: inherit
  publish:
    if: github.repository == 'hashicorp/vagrant-builders'
    needs: [vagrant-artifacts, build-archlinux-package]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3
      - name: Fetch Arch Linux package
        run: ./.ci/restore-cache "${CACHE_ID}" ./pkg
        env:
          CACHE_ID: ${{ needs.build-archlinux-package.outputs.arch-package-id }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create prerelease
        run: . .ci/load-ci.sh && prerelease "${VAGRANT_VERSION}" ./pkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VAGRANT_VERSION: ${{ needs.vagrant-artifacts.outputs.vagrant-version }}
