on:
  workflow_call:
    inputs:
      vagrant_draft_name:
        description: Name of the Vagrant repository draft release containing gem for build
        required: false
        type: string
      vagrant_release_name:
        description: Name of the Vagrant repository release containing gem for build
        required: false
        type: string
    outputs:
      deb-packages-id:
        description: Cache identifier for deb packages
        value: ${{ jobs.info.outputs.deb-packages-id }}
      vagrant-version:
        description: Version of Vagrant package built
        value: ${{ jobs.info.outputs.vagrant-version }}
      vagrant-commit-id:
        description: Commit ID on the Vagrant repository associated to this build
        value: ${{ jobs.info.outputs.vagrant-commit-id }}
jobs:
  info:
    if: ${{ github.repository == 'hashicorp/vagrant-builders' }}
    runs-on: ['self-hosted', 'ondemand', 'linux', 'type=t3.small']
    permissions:
      id-token: write
      contents: write
    outputs:
      vagrant-version: ${{ steps.vagrant-artifacts.outputs.vagrant-version }}
      vagrant-shasum: ${{ steps.vagrant-artifacts.outputs.vagrant-shasum }}
      vagrant-commit-id: ${{ steps.vagrant-artifacts.vagrant-repo-commit-id }}
      deb-32-substrate-id: ${{ steps.inspect.outputs.deb-32-substrate-id }}
      deb-32-substrate-exists: ${{ steps.inspect.outputs.deb-32-substrate-exists }}
      deb-32-install-id: ${{ steps.inspect.outputs.deb-32-install-id }}
      deb-32-install-exists: ${{ steps.inspect.outputs.deb-32-install-exists }}
      deb-64-substrate-id: ${{ steps.inspect.outputs.deb-64-substrate-id }}
      deb-64-substrate-exists: ${{ steps.inspect.outputs.deb-64-substrate-exists }}
      deb-64-install-id: ${{ steps.inspect.outputs.deb-64-install-id }}
      deb-64-install-exists: ${{ steps.inspect.outputs.deb-64-install-exists }}
      deb-packages-id: ${{ steps.inspect.outputs.deb-packages-id }}
      deb-packages-exists: ${{ steps.inspect.outputs.deb-packages-exists }}
    steps:
      - name: Authentication
        id: vault-auth
        run: vault-auth
      - name: Secrets
        id: secrets
        uses: hashicorp/vault-action@v2
        with:
          url: ${{ steps.vault-auth.outputs.addr }}
          caCertificate: ${{ steps.vault-auth.outputs.ca_certificate }}
          token: ${{ steps.vault-auth.outputs.token }}
          secrets:
            kv/data/teams/vagrant/hashibot vagrant_token;
      - name: Code Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Go
        if: ${{ steps.inspect.outputs.deb-32-substrate-exists != 'true' ||  steps.inspect.outputs.deb-64-substrate-exists != 'true' }}
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
      - name: Install Ruby
        run: sudo apt-get install -yq ruby
        env:
          DEBIAN_FRONTEND: noninteractive
      - name: Fetch Vagrant Artifacts
        id: vagrant-artifacts
        run: ./.ci/fetch-vagrant-files
        env:
          VAGRANT_DRAFT_NAME: ${{ inputs.draft_name }}
          VAGRANT_RELEASE_NAME: ${{ inputs.release_name }}
          HASHIBOT_TOKEN: ${{ steps.secrets.outputs.vagrant_token }}
      - name: Gather information
        id: inspect
        run: ./.ci/deb-build-information
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VAGRANT_SHASUM: ${{ steps.vagrant-gem.outputs.vagrant-shasum }}
      - name: Store Vagrant RubyGem
        if: ${{ steps.inspect.outputs.deb-32-install-exists != 'true' ||  steps.inspect.outputs.deb-64-install-exists != 'true' }}
        uses: actions/upload-artifact@v3
        with:
          name: vagrant-rubygem
          path: ./gem
      - name: Store Vagrant Artifacts
        if: ${{ steps.inspect.outputs.deb-packages-exist != 'true' }}
        uses: actions/upload-artifact@v3
        with:
          name: vagrant-artifacts
          path: ./vagrant-artifacts
      - name: Build launchers
        if: ${{ steps.inspect.outputs.deb-32-substrate-exists != 'true' ||  steps.inspect.outputs.deb-64-substrate-exists != 'true' }}
        run: make bin/launcher/linux
      - name: Store Launchers
        if: ${{ steps.inspect.outputs.deb-32-substrate-exists != 'true' ||  steps.inspect.outputs.deb-64-substrate-exists != 'true' }}
        uses: actions/upload-artifact@v3
        with:
          name: vagrant-launchers
          path: ./bin
  build-substrate-32:
    if: ${{ github.repository == 'hashicorp/vagrant-builders' && needs.info.outputs.deb-32-substrate-exists != 'true' }}
    needs: [info]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3
      - name: Fetch Launchers
        uses: actions/download-artifact@v3
        with:
          name: vagrant-launchers
          path: ./bin
      - name: Build Substrate 32-bit
        run: sudo ./.ci/ubuntu-substrate 32 ./artifacts
      - name: Cache Substrate 32-bit
        run: ./.ci/create-cache "${CACHE_ID}" ./artifacts
        env:
          CACHE_ID: ${{ needs.info.outputs.deb-32-substrate-id }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # The 64 bit substrate is also used by appimage so it was
  # extracted to an isolated workflow to be shared
  build-substrate-64:
    if: ${{ github.repository == 'hashicorp/vagrant-builders' && needs.info.outputs.deb-64-substrate-exists != 'true' }}
    needs: [info]
    permissions:
      contents: write
    uses: ./.github/workflows/build-deb-substrate64.yml
    secrets: inherit
  build-install-32:
    if: ${{ github.repository == 'hashicorp/vagrant-builders' && needs.info.outputs.deb-32-install-exists != 'true' && !cancelled() && !failure() }}
    needs: [info, build-substrate-32]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3
      - name: Fetch Substrate
        run: ./.ci/restore-cache "${CACHE_ID}" ./substrates
        env:
          CACHE_ID: ${{ needs.info.outputs.deb-32-substrate-id }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Fetch RubyGem
        uses: actions/download-artifact@v3
        with:
          name: vagrant-rubygem
          path: ./gem
      - name: Run install
        run: sudo ./.ci/ubuntu-install ./gem ./substrates ./artifacts
      - name: Cache Install 32-bit
        run: ./.ci/create-cache "${CACHE_ID}" ./artifacts
        env:
          CACHE_ID: ${{ needs.info.outputs.deb-32-install-id }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-install-64:
    if: ${{ github.repository == 'hashicorp/vagrant-builders' && needs.info.outputs.deb-64-install-exists != 'true' && !cancelled() && !failure() }}
    needs: [info, build-substrate-64]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3
      - name: Fetch Substrate
        run: ./.ci/restore-cache "${CACHE_ID}" ./substrates
        env:
          CACHE_ID: ${{ needs.info.outputs.deb-64-substrate-id }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Fetch RubyGem
        uses: actions/download-artifact@v3
        with:
          name: vagrant-rubygem
          path: ./gem
      - name: Run install
        run: sudo ./.ci/ubuntu-install ./gem ./substrates ./artifacts
      - name: Cache Install 64-bit
        run: ./.ci/create-cache "${CACHE_ID}" ./artifacts
        env:
          CACHE_ID: ${{ needs.info.outputs.deb-64-install-id }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-packages:
    if: ${{ github.repository == 'hashicorp/vagrant-builders' && needs.info.outputs.deb-packages-exists != 'true' && !cancelled() && !failure() }}
    needs: [info, build-install-32, build-install-64]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3
      - name: Fetch Install 32-bit
        run: ./.ci/restore-cache "${CACHE_ID}" ./artifacts
        env:
          CACHE_ID: ${{ needs.info.outputs.deb-32-install-id }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Fetch Install 64-bit
        run: ./.ci/restore-cache "${CACHE_ID}" ./artifacts
        env:
          CACHE_ID: ${{ needs.info.outputs.deb-64-install-id }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1
      - name: Install fpm
        run: gem install --no-document fpm
      - name: Fetch Artifacts
        uses: actions/download-artifact@v3
        with:
          name: vagrant-artifacts
          path: ./vagrant-artifacts
      - name: Package 32-bit
        run: ./package/build-deb ./artifacts/installed_ubuntu_386.zip ./vagrant-artifacts/vagrant-go_linux_386 ./pkgs "${VERSION}"
        env:
          VERSION: ${{ needs.info.outputs.vagrant-version }}
      - name: Package 64-bit
        run: ./package/build-deb ./artifacts/installed_ubuntu_x86_64.zip ./vagrant-artifacts/vagrant-go_linux_amd64 ./pkgs "${VERSION}"
        env:
          VERSION: ${{ needs.info.outputs.vagrant-version }}
      - name: Cache Vagrant debs
        run: ./.ci/create-cache "${CACHE_ID}" ./pkgs
        env:
          CACHE_ID: ${{ needs.info.outputs.deb-packages-id }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
