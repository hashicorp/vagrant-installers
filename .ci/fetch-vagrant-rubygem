#!/usr/bin/env bash

# Output to stdout if we aren't on a runner
if [ -z "${GITHUB_OUTPUT}" ]; then
    GITHUB_OUTPUT="/dev/stdout"
fi

csource="${BASH_SOURCE[0]}"
while [ -h "$csource" ] ; do csource="$(readlink "$csource")"; done
root="$( cd -P "$( dirname "$csource" )/../" && pwd )"

. "${root}/.ci/load-ci.sh"
pushd "${root}"

# If both names are empty default to main
# for draft release
if [ -z "${VAGRANT_DRAFT_NAME}" ] && [ -z "${VAGRANT_RELEASE_NAME}" ]; then
    debug "no release name provided via github event, defaulting to main draft"
    VAGRANT_DRAFT_NAME="main"
fi

# Fetch the rubygem and store it in the ./gem directory
# so it can be uploaded for later use in the workflow
mkdir ./gem || failure "Could not create directory for Vagrant RubyGem"
pushd ./gem
if [ -n "${VAGRANT_RELEASE_NAME}" ]; then
    debug "fetching vagrant rubygem from vagrant release %s" "${VAGRANT_RELEASE_NAME}"
    github_release_assets "vagrant" "${VAGRANT_RELEASE_NAME}" ".gem"
fi

if [ -n "${VAGRANT_DRAFT_NAME}" ]; then
    debug "fetching vagrant rubygem from vagrant draft %s" "${VAGRANT_DRAFT_NAME}"
    github_draft_release_assets "vagrant" "${VAGRANT_DRAFT_NAME}" ".gem"
fi
mv ./*.gem vagrant.gem ||
    failure "Could not rename Vagrant RubyGem to vagrant.gem"
popd

# Get the Vagrant version from the gem
spec_info="$(gem spec ./gem/vagrant.gem version)" ||
    failure "Unable to read version information from Vagrant RubyGem"
vagrant_version="${spec_info##*: }"
# Generate the shasum of the gem
sha_info="$(sha1sum ./gem/vagrant.gem)" ||
    failure "Unable to generate shasum for Vagrant RubyGem"
vagrant_sha="${sha_info%% *}"

# Write the outputs
printf "vagrant-version=%s\n" "${vagrant_version}" >> "${GITHUB_OUTPUT}"
printf "vagrant-shasum=%s\n" "${vagrant_sha}" >> "${GITHUB_OUTPUT}"
