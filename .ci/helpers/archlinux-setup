#!/usr/bin/env bash

# This script should not be called directly. It handles
# the internal setup for the archlinux build environment

# Load CI helpers
csource="${BASH_SOURCE[0]}"
while [ -h "$csource" ] ; do csource="$(readlink "$csource")"; done
root="$( cd -P "$( dirname "$csource" )/../../" && pwd )"

. "${root}/.ci/load-ci.sh"

ctn_name="${1?Container name required}"

# Only add these rules if we are on a github runner
debug "flushing nft"
nft flush ruleset

# Start by setting up incus
# NOTE: It's okay if incus has already had init run,
#       this will just end up being a no-op
debug "initializing incus"
incus admin init --auto ||
    failure "Unable to setup incus"

# NOTE: It's fine to run this if the bridge is already
#       in an up state, it's just a no-op
debug "attempting to place incusbr0 bridge in up state"
sudo networkctl up incusbr0 ||
    failure "Could not bring incusbr0 up"

debug "launching archlinux container named '%s'" "${ctn_name}"
incus launch --ephemeral images:archlinux "${ctn_name}" ||
    failure "Unable to launch archlinux container"

# Now mount our project directory into the container
proj_name="${root##*/}"

debug "mounting directory into container %s -> %s" \
    "${root}" "/${proj_name}"

incus config device add "${ctn_name}" "${proj_name}" \
    disk source="${root}" path="/${proj_name}" ||
    failure "Unable to mount project directory into container"

# Wait for network to be ready before we attempt to install
# any required packages
status="$(incus exec "${ctn_name}" -- networkctl status --json short | jq -r '.Interfaces[] | select(.Name == "eth0") | .AddressState' 2> /dev/null)"
while [ "${status}" != "routable" ]; do
    debug "sleeping for a moment while we wait for networking to setup (status: %s)" \
        "${status}"
    sleep 2
    status="$(incus exec "${ctn_name}" -- networkctl status --json short | jq -r '.Interfaces[] | select(.Name == "eth0") | .AddressState')"
done

# Once ready do a final pause to ensure
# things are actually working
sleep 2

# Install required tools
debug "installing build tools"
incus exec "${ctn_name}" -- pacman -Sy --noconfirm curl base-devel unzip zip python ||
    failure "Could not install required build tools"
